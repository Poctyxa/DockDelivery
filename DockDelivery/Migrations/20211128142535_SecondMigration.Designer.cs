// <auto-generated />
using System;
using DockDelivery.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DockDelivery.Migrations
{
    [DbContext(typeof(DockDeliveryDbContext))]
    [Migration("20211128142535_SecondMigration")]
    partial class SecondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DockDelivery.Domain.Entities.Cargo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.Property<Guid>("CargoSectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CargoSectionId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("DockDelivery.Domain.Entities.CargoSection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CapacityLimit")
                        .HasColumnType("float");

                    b.Property<Guid?>("CargoTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("WeightLimit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CargoTypeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("CargoSections");
                });

            modelBuilder.Entity("DockDelivery.Domain.Entities.CargoType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CargoTypes");
                });

            modelBuilder.Entity("DockDelivery.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("DockDelivery.Domain.Entities.Cargo", b =>
                {
                    b.HasOne("DockDelivery.Domain.Entities.CargoSection", "CargoSection")
                        .WithMany()
                        .HasForeignKey("CargoSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoSection");
                });

            modelBuilder.Entity("DockDelivery.Domain.Entities.CargoSection", b =>
                {
                    b.HasOne("DockDelivery.Domain.Entities.CargoType", "CargoType")
                        .WithMany()
                        .HasForeignKey("CargoTypeId");

                    b.HasOne("DockDelivery.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CargoType");

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
